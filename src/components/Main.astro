---
import { getCollection } from "astro:content";
import type { InferEntrySchema } from "astro:content";
import Testimonial from "@/components/Testimonial.tsx";
import Footer from "@/components/Footer.tsx";
import Subscribe from "@/components/Subscribe.tsx";

import { Image } from "astro:assets";
import his_cover from "@/assets/his.jpg";

const posts = (
    await getCollection("podcast", () => {
        return true;
    })
)
    // sort by season, then by order
    .sort((a, b) => {
        // post.id format is: "season-1/authority.md"
        const aSeason = a.data.season || 0;
        const bSeason = b.data.season || 0;

        // Sort by season in descending order
        if (bSeason !== aSeason) {
            return bSeason - aSeason;
        }

        // If seasons are the same, sort by order in descending order
        return b.data.sidebar.order - a.data.sidebar.order;
    });

function calculateEpisodeNumber(
    posts: { id: string; data: InferEntrySchema<"podcast"> }[],
    currentPost: { id: string; data: InferEntrySchema<"podcast"> },
) {
    const season = currentPost.data.season || 0;
    const episodesInSeason = posts
        .filter((p) => p.data.season === season)
        .sort((a, b) => b.data.sidebar.order - a.data.sidebar.order); // Sort in descending order
    const episodeIndex = episodesInSeason.findIndex(
        (p) => p.id === currentPost.id,
    );
    return episodesInSeason.length - episodeIndex; // This will make the latest episode have the highest number
}
---

<div class="container">
    <div class="hero-wrapper">
        <div class="hero">
            <div
                style={{
                    display: "flex",
                    flexDirection: "column",
                    textAlign: "center",
                    justifyContent: "center",
                    alignItems: "center",
                    maxWidth: "472px",
                    margin: "0 auto",
                }}
            >
                <Image
                    class="hero-image"
                    width={472}
                    src={his_cover}
                    alt={`Hope in Source Cover Art`}
                />
                <p style={{ margin: 0, maxWidth: "75%" }}>
                    Join <a href="https://twitter.com/left_pad">Henry Zhu</a> for
                    an off-the-cuff conversation between friends.
                </p>
                <p style={{ marginTop: 0, fontSize: "0.9rem" }}>
                    (read the backstory from{" "}
                    <a href="https://henryzoo.com/living-out-in-faith">Henry</a>
                    and{" "}
                    <a href="https://nadia.xyz/public-faith">Nadia</a>)
                </p>
                <Subscribe />
            </div>
        </div>
    </div>
    <div>
        {
            posts
                // sort by season, then by order
                .sort((a, b) => {
                    // post.id format is: "season-1/authority.md"
                    const aSeason = a.data.season || 0;
                    const bSeason = b.data.season || 0;

                    // Sort by season in descending order
                    if (bSeason !== aSeason) {
                        return bSeason - aSeason;
                    }

                    // If seasons are the same, sort by order in descending order
                    return b.data.sidebar.order - a.data.sidebar.order;
                })
                .map((post) => {
                    const title = post.data.title || post.id;
                    const newSlug = post.id.split("/").pop();
                    const episodeNumber = calculateEpisodeNumber(posts, post);
                    return (
                        <div>
                            <h3 style={{ marginTop: 0 }}>
                                <a href={`/${newSlug}`}>{title}</a>
                            </h3>
                            <small>
                                {post.data.date}
                                {post.data.time &&
                                    ` â€¢ ${post.data.time} min ðŸŽ§`}
                                {post.data.season &&
                                    ` â€¢ Season ${post.data.season}, Episode ${episodeNumber}`}
                            </small>
                            <p set:html={post.data.description} />
                        </div>
                    );
                })
        }
        <hr />
        <Testimonial />
        <Footer />
    </div>
</div>

<style>
    .hero-image {
        width: 100%;
        max-width: 472px;
        height: auto;
        aspect-ratio: 1 / 1;
        object-fit: contain;
        margin-bottom: 1rem;
    }

    @media (max-width: 768px) {
        .hero-image {
            max-width: 90%;
        }
    }
</style>
